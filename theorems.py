# Axioms dictionary acts as the theorem memory as well.
# Any expression proved to be a theorem will be added to this dictionary.
axioms = {
    1: ["p", "v", "p", ":>:", "p"],

    2: ["p", ":>:", "q", "v", "p"],

    3: ["p", "v", "q", ":>:", "q", "v", "p"],

    4: ["p", ".v.", "q", "v", "r", ":>:", "q", ".v.", "p", "v", "r"],

    5: ["p", ">", "q", ":>:", "r", "v", "p", ".>.", "r", "v", "q"],

    6: ["r", "v", "r", ":>:", "r"],

    7: ["a", ".>.", "b", ">", "c", ":>:", "b", ".>.", "a", ">", "c"],

    8: ["a", ">", "b", ":>:", "c", ">", "a", ".>.", "c", ">", "b"],

    9: ["p", ":>:", "p", "v", "p"]
}

expressions = {
    1: ["p", ">", "-p", ":>:", "-p"],

    2: ["p", ":>:", "-q", "v", "-p"],

    3: ["q", "v", "p", ":>:", "p", "v", "q"],

    4: ["p", ".v.", "r", "v", "q", ":>:", "p", ".v.", "q", "v", "r"],

    5: ["p", ">", "q", ":>:", "p", "v", "r", ".>.", "q", "v", "r"],

    6: ["r", "v", "r", ":>:", "r"],

    7: ["p", ">", "q", ":>:", "q", ">", "r", ".>.", "p", ">", "r"],

    8: ["a", ":>:", "b", ".>.", "c"],

    9: ["p", ":>:", "p"]
}

